{"version":3,"sources":["Components/Navbar.js","Components/Textform.js","Components/Alert.js","App.js","reportWebVitals.js","index.js","Components/img/logo.png"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","src","Logo","alt","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","wordCount","split","length","heading","value","onChange","event","target","rows","newText","toUpperCase","document","getElementById","showAlert","toLowerCase","navigator","clipboard","writeText","join","defaultProps","title","about","Alert","alert","role","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","Fragment","style","backgroundColor","color","Components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App","module","exports","p"],"mappings":"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","file":"static/js/main.2049d886.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Logo from './img/logo.png'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n\r\n  return (\r\n    <nav className= {`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      {/* <Link className=\"navbar-brand\" to=\"/\"><img src = {Logo} alt='no logo'/></Link> */}\r\n      <a className=\"navbar-brand\" href=\"#\"><img src = {Logo} alt='no logo'/></a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/About\">About</Link>\r\n            <a className=\"nav-link\" href=\"/About\">About</a>\r\n          </li> */}\r\n        </ul>\r\n        <button type=\"button\" className={`btn btn-${props.mode===\"light\"?\"dark\":\"light\"} my-3 mx-1`} onClick={props.toggleMode}>{props.mode===\"light\"?\"Darkmode\":\"Lightmode\"}</button>\r\n\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    about: PropTypes.string\r\n}\r\n\r\n//These are the default prop values\r\nNavbar.defaultProps = {\r\n    title: \"No Title\",\r\n    about: \"About\"\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n    \r\n  const copyToClipboard = () => {\r\n    navigator.clipboard.writeText(text)\r\n    if(document.getElementById(\"text-area-toggle\").value === \"\")\r\n    {\r\n      props.showAlert(\"Text Area Empty\",\"warning\")\r\n    }\r\n    else\r\n    {\r\n      props.showAlert(\"Copied to Clipboard\",\"success\")\r\n    }\r\n  }\r\n  \r\n  const clickUpper = ()=> {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n\r\n    if(document.getElementById(\"text-area-toggle\").value === \"\")\r\n    {\r\n      props.showAlert(\"Text Area Empty\",\"warning\")\r\n    }\r\n    else\r\n    {\r\n      props.showAlert(\"Converted to Uppercase\",\"success\")\r\n    }\r\n  }\r\n  \r\n  const clickLower = ()=> {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n\r\n    if(document.getElementById(\"text-area-toggle\").value === \"\")\r\n    {\r\n      props.showAlert(\"Text Area Empty\",\"warning\")\r\n    }\r\n    else\r\n    {\r\n      props.showAlert(\"Converted to Lowercase\",\"success\")\r\n    }\r\n  }\r\n  \r\n  const clickClear = () => {\r\n    setText(\"\");\r\n\r\n    if(document.getElementById(\"text-area-toggle\").value === \"\")\r\n    {\r\n    }\r\n    else\r\n    {\r\n      props.showAlert(\"Text Cleared\",\"success\")\r\n    }\r\n  }\r\n\r\n  const extraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra Spaces Removed\", \"success\")\r\n  }\r\n  \r\n  const handleOnChange = (event)=> {\r\n    setText(event.target.value)\r\n  }\r\n\r\n  const[text,setText] = useState(\"\");\r\n  \r\n  let wordCount = text.split(\" \").length - 1\r\n\r\n  return (\r\n        <div className='container'>\r\n            <div className=\"mb-3 my-5\">\r\n                <h2>{props.heading}</h2>\r\n                <textarea className= {`form-control ${props.mode}`} value={text} onChange={handleOnChange} id=\"text-area-toggle\" rows=\"8\"></textarea>\r\n                <button type=\"button\" className={`btn btn-${props.mode==='light'?'primary':'dark'} my-3 mx-1`} onClick={clickUpper}>UPPERCASE</button>\r\n                <button type=\"button\" className={`btn btn-${props.mode==='light'?'primary':'dark'} my-3 mx-1`} onClick={clickLower}>lowercase</button>\r\n                <button type=\"button\" className={`btn btn-${props.mode==='light'?'primary':'dark'} my-3 mx-1`} onClick={copyToClipboard}>Copy</button>\r\n                <button type=\"button\" className={`btn btn-${props.mode==='light'?'primary':'dark'} my-3 mx-1`} onClick={extraSpaces}>Remove Extra Spaces</button>\r\n                <button type=\"button\" className=\"btn btn-danger my-3 mx-1\" onClick={clickClear}>Clear</button>\r\n            </div>\r\n            <div className='container'>\r\n              <h5>Text Summary</h5>\r\n              <p>{wordCount} Words and {text.length} Characters</p>\r\n              <p>{0.48 * wordCount} Seconds reading time</p>\r\n            </div>\r\n        </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  return (\r\n        props.alert && <div className = {`alert alert-${props.alert.type}`} id = \"alrt\" role=\"alert\">\r\n        <strong>{props.alert.msg}</strong>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport Navbar from \"./Components/Navbar\";\nimport Textform from \"./Components/Textform\";\nimport React, {useState} from 'react';\nimport Alert from \"./Components/Alert\";\n// import About from \"./Components/About\";\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Link,\n//   Routes\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n\n  \n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type)=> {\n    setAlert({\n      msg : message,\n      type : type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1000);\n    \n  }\n  \n  const toggleMode = ()=> {\n    \n    if(mode === \"light\")\n    {\n      setMode(\"dark\")\n      document.getElementById(\"body\").style.backgroundColor = \"#292a2e\"\n      document.getElementById(\"body\").style.color = \"white\"\n      showAlert(\"Darkmode has been Enabled\" , \"success\")\n    }\n    else\n    {\n      setMode(\"light\")\n      document.getElementById(\"body\").style.backgroundColor = \"white\"\n      document.getElementById(\"body\").style.color = \"black\"\n      showAlert(\"Lightmode has been Enabled\" , \"success\")\n    }\n  }\n\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar mode = {mode} toggleMode = {toggleMode}/>\n      <Alert alert = {alert}/>\n      <Textform showAlert= {showAlert} heading=\"Enter Text to Analyze\" mode = {mode}/>\n        {/* <Routes> */}\n            \n            {/* <Route exact path=\"/About\" element= {<About/>}/>\n            <Route exact path=\"/\" element= {<Textform showAlert= {showAlert} heading=\"Enter Text to Analyze\" mode = {mode}/>}/> */}\n\n        {/* </Routes>\n      </Router> */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/logo.d595dfe5.png\";"],"sourceRoot":""}